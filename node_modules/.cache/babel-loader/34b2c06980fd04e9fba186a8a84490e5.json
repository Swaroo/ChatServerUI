{"ast":null,"code":"var _jsxFileName = \"/app/src/login.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props); // data that user types in from login form\n\n    this.copyState = obj => {\n      return Object.assign({}, obj);\n    };\n\n    this.onNameChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onPasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault(); // prevents page from reloading with username + password visible as url query\n      // log that username is visible from our state\n\n      console.log(\"Login form submitted\\n\");\n      console.log(\"username: \" + this.state.username);\n      console.log(\"password: \" + this.state.password);\n      sessionStorage.url = this.state.url; // call post with user data\n\n      axios.post(this.state.url + \"/login\", null, {\n        params: {\n          username: this.state.username,\n          password: this.state.password\n        },\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }).then(response => {\n        console.log(response); // get JWT Token\n\n        var curr_token = response[\"data\"][\"token\"]; // store token in state as {user: token}\n\n        var all_tokens = this.copyState(this.state.tokens);\n        all_tokens[this.state.username] = curr_token;\n        this.setState({\n          tokens: all_tokens\n        });\n        console.log(this.state.tokens); //props.history.push(\"/login\");\n        //TODO: Redirect to messageboard\n\n        this.props.history.push({\n          pathname: '/board',\n          state: {\n            token: curr_token\n          }\n        });\n      }, error => {\n        console.log(error);\n\n        if (error.response.status === 403) {\n          console.log(\"403\");\n          alert(\"Wrong password\");\n        }\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      url: '',\n      tokens: {}\n    };\n  } // returns a deep copy of object\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Beackend-URL\"), \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.url,\n      onChange: this.onUrlChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Username\"), \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.username,\n      onChange: this.onNameChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Password\"), \" \"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.onPasswordChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/app/src/login.js"],"names":["React","render","axios","Login","Component","constructor","props","copyState","obj","Object","assign","onNameChange","event","setState","username","target","value","onPasswordChange","password","onUrlChange","url","onSubmit","preventDefault","console","log","state","sessionStorage","post","params","headers","then","response","curr_token","all_tokens","tokens","history","push","pathname","token","error","status","alert"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n\n    // data that user types in from login form\n    this.state = {\n      username: '',\n      password: '',\n      url: '',\n      tokens: {\n        \n      }\n    };\n\n  }\n\n  // returns a deep copy of object\n  copyState = (obj) => {\n    return Object.assign({}, obj);\n  }\n\n  // update username in state when keys are typed into login form\n  onNameChange = (event) =>{\n    this.setState({username: event.target.value})\n  }\n\n   // update password in state when keys are typed into login form\n  onPasswordChange = (event) =>{\n    this.setState({password: event.target.value})\n  }\n\n  // update url in state when keys are typed into login form\n  onUrlChange = (event) =>{\n    this.setState({url: event.target.value})\n  }\n\n  // call post to server when user submits login form\n  onSubmit = (event) => {\n    event.preventDefault(); // prevents page from reloading with username + password visible as url query\n\n    // log that username is visible from our state\n    console.log(\"Login form submitted\\n\");\n    console.log(\"username: \" + this.state.username);\n    console.log(\"password: \" + this.state.password);\n\n\n    sessionStorage.url = this.state.url;\n\n   // call post with user data\n   axios.post( this.state.url+\"/login\", null, { \n      params: {\n        username: this.state.username,\n        password: this.state.password \n      }, \n      headers: { \"Access-Control-Allow-Origin\": \"*\", } \n    }).then((response) => {\n      console.log(response);\n\n      // get JWT Token\n      var curr_token = response[\"data\"][\"token\"]\n\n      // store token in state as {user: token}\n      var all_tokens = this.copyState(this.state.tokens);\n      all_tokens[this.state.username] = curr_token\n      this.setState({tokens: all_tokens})\n      console.log(this.state.tokens);\n      //props.history.push(\"/login\");\n      //TODO: Redirect to messageboard\n      this.props.history.push({pathname: '/board', state: {token: curr_token}})\n\n    }, (error) => {\n      console.log(error);\n      if (error.response.status === 403){\n        console.log(\"403\");\n        alert(\"Wrong password\");\n      }\n\n    });\n   \n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n          <h1>Login</h1>\n\n          <label> <b>Beackend-URL</b> </label>\n          <input type=\"text\" value={this.state.url} onChange={this.onUrlChange} required/>\n          <br></br>\n          <label> <b>Username</b> </label>\n          <input type=\"text\" value={this.state.username} onChange={this.onNameChange} required/>\n          <br></br>\n          <label> <b>Password</b> </label>\n          <input type=\"password\" value={this.state.password} onChange={this.onPasswordChange} required/>\n          <br></br>\n          <button type=\"submit\" className=\"btn\">Login</button>\n        </form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}