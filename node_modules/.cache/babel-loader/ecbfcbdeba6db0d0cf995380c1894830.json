{"ast":null,"code":"var _jsxFileName = \"/app/src/board.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\nfunction date_format(timestamp) {\n  var date = new Date(timestamp * 1000);\n  return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props); // data that user types in from login form\n\n    this.onMessageChange = event => {\n      console.log(\"a\");\n      this.setState({\n        out_message: event.target.value\n      });\n\n      if (event.target.value === 'Enter') {\n        console.log(\"You typed enter!\\n\");\n      }\n    };\n\n    this.onKeyDown = ele => {\n      if (ele.keyCode === 13) {\n        var cur_message = this.state.out_message;\n        console.log(\"enter pressed!\");\n        console.log(\"sending this message to server: \" + cur_message);\n        console.log(\"with this token: \" + this.state.token);\n        this.setState({\n          out_message: ''\n        });\n        axios.post(\"http://localhost:3000/message\", null, {\n          params: {\n            message: cur_message\n          },\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            Authorization: \"Bearer \".concat(this.state.token)\n          }\n        }).then(response => {\n          console.log(response);\n        }, error => {\n          console.log(error);\n\n          if (error.response.status === 403) {\n            console.log(\"403: Token not valid\");\n          }\n        });\n      }\n    };\n\n    this.onTextChange = event => {\n      // DUMMY\n      this.setState({\n        out_message: event.target.value\n      });\n    };\n\n    this.state = {\n      board_data: 'This is default data on board',\n      messages: [\"default\"],\n      columns: \"this is a column\",\n      token: ''\n    };\n  } // update username in state when keys are typed into login form\n\n\n  componentDidMount() {\n    var old_state = this.props.location.state;\n    console.log(\"old state: \");\n    console.log(old_state);\n    console.log(\"old token: \" + old_state.token);\n    this.setState({\n      token: old_state.token\n    });\n    var eventSource = new EventSource(\"http://localhost:3000/stream/\" + old_state.token);\n    let my = this;\n    eventSource.addEventListener(\"message\", function (event) {\n      //debugger;\n      console.log(event.data);\n      var msg = JSON.parse(event.data); //var board_data = document.getElementById('board').value;\n\n      var post = msg[\"msg\"] + \" at \" + date_format(msg[\"post_time\"]) + \" by \" + msg[\"name\"];\n      my.setState({\n        messages: [...my.state.messages, post]\n      });\n    }, false);\n  } //<ReactTable data={this.state.board_data} columns={this.state.columns} />\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" CS 291 Class\"), React.createElement(\"div\", {\n      className: \"moreinfo\",\n      id: \"darkgray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Today, hate speech continues to profilerate throughout the Internet, normalized in the form of YouTube comments, animated GIFs, and tweets. Online anonymity affords users a sense of security that fosters a culture of cruelty and bigotry. Our goal is to create a conversation about the consequences of hateful speech that rethinks how we communicate online. Social media is full of positive potential; we can tap into it by holding each other accountable.\")), React.createElement(\"div\", {\n      className: \"moreinfo\",\n      id: \"lightgray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\\"WE NEED TO TEACH OUR CHILDREN NOT TO STAND SILENTLY BY WHILE OTHERS ARE BEING TORMENTED. IN THE END, THEY WILL BE SAFER ONLINE & OFFLINE.\\\"\", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"READ ARTICLE BY WIRED SAFETY\"))), React.createElement(\"input\", {\n      style: {\n        height: '30px',\n        width: '100%'\n      },\n      type: \"text\",\n      value: this.state.out_message,\n      onChange: this.onMessageChange,\n      onKeyDown: this.onKeyDown,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass MessageList extends React.Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"message-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.props.messages.map(message => {\n      return React.createElement(\"ul\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, message));\n    }));\n  }\n\n} //<input style={{height: '30px', width:'100%'}} type=\"text\" value={this.state.message} onChange={this.onMessageChange} required/>\n\n\nexport default Board;","map":{"version":3,"sources":["/app/src/board.js"],"names":["React","render","axios","date_format","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","Board","Component","constructor","props","onMessageChange","event","console","log","setState","out_message","target","value","onKeyDown","ele","keyCode","cur_message","state","token","post","params","message","headers","Authorization","then","response","error","status","onTextChange","board_data","messages","columns","componentDidMount","old_state","location","eventSource","EventSource","my","addEventListener","data","msg","JSON","parse","color","height","width","MessageList","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\nfunction date_format(timestamp) {\n  var date = new Date(timestamp * 1000);\n  return (\n      date.toLocaleDateString(\"en-US\") +\n      \" \" +\n      date.toLocaleTimeString(\"en-US\")\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    \n    // data that user types in from login form\n    this.state = {\n      board_data: 'This is default data on board',\n      messages: [\"default\"],\n      columns: \"this is a column\",\n      token: ''\n    };\n\n    \n  }\n  // update username in state when keys are typed into login form\n  onMessageChange = (event) =>{\n    console.log(\"a\");\n    this.setState({out_message: event.target.value})\n    if (event.target.value === 'Enter'){\n      console.log(\"You typed enter!\\n\");\n    }\n  }\n\n  onKeyDown = (ele) =>{\n    if (ele.keyCode === 13){\n      var cur_message = this.state.out_message;\n      console.log(\"enter pressed!\");\n      console.log(\"sending this message to server: \" + cur_message);\n      console.log(\"with this token: \" + this.state.token);\n\n      this.setState({out_message: ''});\n\n      axios.post( \"http://localhost:3000/message\", null, { \n      params: {\n        message: cur_message\n      }, \n      headers: { \n        \"Access-Control-Allow-Origin\": \"*\", \n        Authorization: `Bearer ${this.state.token}`\n      } \n    }).then((response) => {\n      console.log(response);\n\n    }, (error) => {\n      console.log(error);\n      if (error.response.status === 403){\n        console.log(\"403: Token not valid\");\n      }\n\n    });\n\n    }\n  }\n\n  onTextChange = (event) =>{\n    // DUMMY\n    this.setState({out_message: event.target.value})\n  }\n\n  componentDidMount() {\n    var old_state = this.props.location.state;\n    console.log(\"old state: \");\n    console.log(old_state);\n    console.log(\"old token: \" + old_state.token);\n\n    this.setState({token: old_state.token});\n    var eventSource = new EventSource(\"http://localhost:3000/stream/\"+old_state.token);\n\n\n    let my = this;\n\n    eventSource.addEventListener(\n      \"message\",\n        function(event) {\n          //debugger;\n            console.log(event.data);\n            var msg = JSON.parse(event.data);\n            //var board_data = document.getElementById('board').value;\n            var post = msg[\"msg\"] + \" at \" \n            + date_format(msg[\"post_time\"]) + \" by \"+ msg[\"name\"];\n            my.setState({\n              messages: [...my.state.messages, post]\n            })\n        },\n        false\n    );\n\n\n\n    \n  }\n\n  //<ReactTable data={this.state.board_data} columns={this.state.columns} />\n  \n \n\trender() {\n\t\treturn (\n\t\t\t<div>\n        <h1 align=\"center\" style={{color:'green'}}> CS 291 Class</h1>\n        <div className=\"moreinfo\" id=\"darkgray\">\n            <p>\n                Today, hate speech continues to profilerate throughout the Internet, normalized in the form of YouTube comments, animated GIFs, and tweets. Online anonymity affords users a sense of security that fosters a culture of cruelty and bigotry. Our goal is to create a conversation about the consequences of hateful speech that rethinks how we communicate online. Social media is full of positive potential; we can tap into it by holding each other accountable.\n            </p>\n        </div>\n        <div className=\"moreinfo\" id=\"lightgray\">\n            <h2>\n                \"WE NEED TO TEACH OUR CHILDREN NOT TO STAND SILENTLY BY WHILE OTHERS ARE BEING TORMENTED. IN THE END, THEY WILL BE SAFER ONLINE &amp; OFFLINE.\"\n                <a href=\"#\">READ ARTICLE BY WIRED SAFETY</a>\n            </h2>\n        </div>\n\n        <input style={{height: '30px', width:'100%'}} type=\"text\" value={this.state.out_message} onChange={this.onMessageChange} onKeyDown={this.onKeyDown} required/>\n\n      </div>\n    )\n  }\n}\n\nclass MessageList extends React.Component {\n  render() {\n      return (\n          <ul className=\"message-list\">\n              {this.props.messages.map((message) => {\n                  return (\n                    <ul className=\"message\">\n                      <div>{message}</div>\n                    </ul>\n                  )\n              })}\n          </ul>\n      )\n  }\n}\n\n//<input style={{height: '30px', width:'100%'}} type=\"text\" value={this.state.message} onChange={this.onMessageChange} required/>\nexport default Board"]},"metadata":{},"sourceType":"module"}