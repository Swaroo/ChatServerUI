{"ast":null,"code":"var _jsxFileName = \"/app/src/board.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\nfunction date_format(timestamp) {\n  var date = new Date(timestamp * 1000);\n  return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props); // data that user types in from login form\n\n    this.onMessageChange = event => {\n      console.log(\"a\");\n      this.setState({\n        out_message: event.target.value\n      });\n\n      if (event.target.value === 'Enter') {\n        console.log(\"You typed enter!\\n\");\n      }\n    };\n\n    this.onKeyDown = ele => {\n      if (ele.keyCode === 13) {\n        var cur_message = this.state.out_message;\n        console.log(\"enter pressed!\");\n        console.log(\"sending this message to server: \" + cur_message);\n        console.log(\"with this token: \" + this.state.token);\n        this.setState({\n          out_message: ''\n        });\n        axios.post(\"http://localhost:3000/message\", null, {\n          params: {\n            message: cur_message\n          },\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            Authorization: \"Bearer \".concat(this.state.token)\n          }\n        }).then(response => {\n          console.log(response);\n        }, error => {\n          console.log(error);\n\n          if (error.response.status === 403) {\n            console.log(\"403: Token not valid\");\n          }\n        });\n      }\n    };\n\n    this.onTextChange = event => {\n      // DUMMY\n      this.setState({\n        out_message: event.target.value\n      });\n    };\n\n    this.state = {\n      board_data: 'This is default data on board',\n      messages: [\"Messages\"],\n      users: [\"Online\"],\n      columns: \"this is a column\",\n      token: ''\n    };\n  } // update username in state when keys are typed into login form\n\n\n  componentDidMount() {\n    var old_state = this.props.location.state;\n    console.log(\"old state: \");\n    console.log(old_state);\n    console.log(\"old token: \" + old_state.token);\n    this.setState({\n      token: old_state.token\n    });\n    var eventSource = new EventSource(\"http://localhost:3000/stream/\" + old_state.token);\n    let my = this;\n\n    eventSource.onerror = function (event) {\n      console.log(\"Connection error\", event);\n      eventSource.close();\n    };\n\n    eventSource.addEventListener(\"Users\", event => {\n      console.log(\"Users\");\n      var msg = JSON.parse(event.data);\n      var onlineUsers = msg[\"users\"];\n      console.log(onlineUsers); //var board_data = document.getElementById('board').value;\n      //var post = date_format(msg[\"created\"]) + \" : Make some noise for \" + msg[\"user\"] + \".\" \n\n      my.setState({\n        users: [\"Online\"]\n      });\n      var i = 0;\n\n      for (; i < onlineUsers.length; i++) {\n        my.setState({\n          users: [...my.state.users, onlineUsers[i]]\n        });\n      }\n    }, false);\n    eventSource.addEventListener(\"Join\", event => {\n      console.log(\"Join\");\n      console.log(event.data);\n      var msg = JSON.parse(event.data); //var board_data = document.getElementById('board').value;\n\n      var post = date_format(msg[\"created\"]) + \" : Make some noise for \" + msg[\"user\"] + \".\";\n      my.setState({\n        messages: [...my.state.messages, post]\n      });\n    }, false);\n    eventSource.addEventListener(\"HeartBeat\", event => {\n      console.log(event.data);\n    }, false);\n    eventSource.addEventListener(\"Message\", event => {\n      console.log(\"Message\");\n      console.log(event.data);\n      var msg = JSON.parse(event.data); //var board_data = document.getElementById('board').value;\n\n      var post = date_format(msg[\"created\"]) + \" : \" + msg[\"user\"] + \" SAYS -> \" + msg[\"message\"];\n      my.setState({\n        messages: [...my.state.messages, post]\n      });\n    }, false);\n  } //<ReactTable data={this.state.board_data} columns={this.state.columns} />\n\n\n  render() {\n    return React.createElement(\"section\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '90vh',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" CS 291 Class\"), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '1',\n        margin: '0.5em 0.5em 0 0.5em',\n        minHeight: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      style: {\n        height: '100%',\n        width: '10em',\n        overflow: 'scroll',\n        margin: '0 0.5em 0.5em 0.5em',\n        minHeight: '2em'\n      },\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      style: {\n        height: '100%',\n        width: '20%',\n        overflow: 'scroll',\n        marginBottom: '0.5em'\n      },\n      messages: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      style: {\n        margin: '80vh 0vh',\n        height: '5vh',\n        width: '100%'\n      },\n      type: \"text\",\n      value: this.state.out_message,\n      onChange: this.onMessageChange,\n      onKeyDown: this.onKeyDown,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass MessageList extends React.Component {\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.props.messages.map(message => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, message));\n    }));\n  }\n\n} //<input style={{height: '30px', width:'100%'}} type=\"text\" value={this.state.message} onChange={this.onMessageChange} required/>\n\n\nexport default Board;","map":{"version":3,"sources":["/app/src/board.js"],"names":["React","render","axios","date_format","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","Board","Component","constructor","props","onMessageChange","event","console","log","setState","out_message","target","value","onKeyDown","ele","keyCode","cur_message","state","token","post","params","message","headers","Authorization","then","response","error","status","onTextChange","board_data","messages","users","columns","componentDidMount","old_state","location","eventSource","EventSource","my","onerror","close","addEventListener","msg","JSON","parse","data","onlineUsers","i","length","display","flexDirection","height","overflow","color","flex","margin","minHeight","width","marginBottom","MessageList","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\nfunction date_format(timestamp) {\n  var date = new Date(timestamp * 1000);\n  return (\n      date.toLocaleDateString(\"en-US\") +\n      \" \" +\n      date.toLocaleTimeString(\"en-US\")\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    \n    // data that user types in from login form\n    this.state = {\n      board_data: 'This is default data on board',\n      messages: [\"Messages\"],\n      users: [\"Online\"],\n      columns: \"this is a column\",\n      token: ''\n    };\n\n    \n  }\n  // update username in state when keys are typed into login form\n  onMessageChange = (event) =>{\n    console.log(\"a\");\n    this.setState({out_message: event.target.value})\n    if (event.target.value === 'Enter'){\n      console.log(\"You typed enter!\\n\");\n    }\n  }\n\n  onKeyDown = (ele) =>{\n    if (ele.keyCode === 13){\n      var cur_message = this.state.out_message;\n      console.log(\"enter pressed!\");\n      console.log(\"sending this message to server: \" + cur_message);\n      console.log(\"with this token: \" + this.state.token);\n\n      this.setState({out_message: ''});\n\n      axios.post( \"http://localhost:3000/message\", null, { \n      params: {\n        message: cur_message\n      }, \n      headers: { \n        \"Access-Control-Allow-Origin\": \"*\", \n        Authorization: `Bearer ${this.state.token}`\n      } \n    }).then((response) => {\n      console.log(response);\n\n    }, (error) => {\n      console.log(error);\n      if (error.response.status === 403){\n        console.log(\"403: Token not valid\");\n      }\n\n    });\n\n    }\n  }\n\n  onTextChange = (event) =>{\n    // DUMMY\n    this.setState({out_message: event.target.value})\n  }\n\n  componentDidMount() {\n    var old_state = this.props.location.state;\n    console.log(\"old state: \");\n    console.log(old_state);\n    console.log(\"old token: \" + old_state.token);\n\n    this.setState({token: old_state.token});\n    var eventSource = new EventSource(\"http://localhost:3000/stream/\"+old_state.token);\n\n\n    let my = this;\n\n    eventSource.onerror   = function(event) {\n      console.log(\"Connection error\", event) \n      eventSource.close();\n  }\n\n    eventSource.addEventListener(\n      \"Users\",\n        (event) => {\n            console.log(\"Users\");\n            var msg = JSON.parse(event.data);\n            var onlineUsers = msg[\"users\"]\n            console.log(onlineUsers);\n            \n            //var board_data = document.getElementById('board').value;\n            //var post = date_format(msg[\"created\"]) + \" : Make some noise for \" + msg[\"user\"] + \".\" \n\n            my.setState({\n              users: [\"Online\"]\n            });\n            var i = 0;\n            for (; i < onlineUsers.length; i++){\n              my.setState({\n                users: [...my.state.users, onlineUsers[i]]\n              });\n            }\n        },\n        false\n    );\n\n    eventSource.addEventListener(\n      \"Join\",\n        (event) => {\n            console.log(\"Join\");\n            console.log(event.data);\n            var msg = JSON.parse(event.data);\n            //var board_data = document.getElementById('board').value;\n            var post = date_format(msg[\"created\"]) + \" : Make some noise for \" + msg[\"user\"] + \".\" \n            my.setState({\n              messages: [...my.state.messages, post]\n            })\n        },\n        false\n    );\n\n    eventSource.addEventListener(\n      \"HeartBeat\",\n        (event) => {\n            console.log(event.data);\n        },\n        false\n    );\n    \n    eventSource.addEventListener(\n      \"Message\",\n        (event) => {\n            console.log(\"Message\");\n            console.log(event.data);\n            var msg = JSON.parse(event.data);\n            //var board_data = document.getElementById('board').value;\n            var post = date_format(msg[\"created\"]) + \" : \" + msg[\"user\"] + \" SAYS -> \" +msg[\"message\"];\n            my.setState({\n              messages: [...my.state.messages, post]\n            })\n        },\n        false\n    );    \n  }\n\n  //<ReactTable data={this.state.board_data} columns={this.state.columns} />\n\t\n\trender() {\n\t\treturn (\n\t\t\n        <section style={{display:'flex', flexDirection:'column', height:'90vh', overflow: 'hidden'}}>\n          <h1 align=\"center\" style={{color:'green'}}> CS 291 Class</h1>\n          <div style={{display: 'flex', flex: '1', margin: '0.5em 0.5em 0 0.5em', minHeight: '0'}} >\n            <MessageList style={{ height:'100%',  width:'10em', overflow:'scroll', margin: '0 0.5em 0.5em 0.5em', minHeight: '2em'}}\n                messages={this.state.messages} />\n          \n            <MessageList style={{  height:'100%',  width:'20%', overflow:'scroll', marginBottom: '0.5em'}}\n                messages={this.state.users} />\n\n          </div>\n\n          <input style={{margin:'80vh 0vh', height: '5vh', width:'100%'}} type=\"text\" value={this.state.out_message} onChange={this.onMessageChange} onKeyDown={this.onKeyDown} required/>\n        </section>\n    )\n  }\n}\n\nclass MessageList extends React.Component {\n  render() {\n      return (\n          <ul >\n              {this.props.messages.map((message) => {\n                  return (\n                    <ul>\n                      <div>{message}</div>\n                    </ul>\n                  )\n              })}\n          </ul>\n      )\n  }\n}\n\n//<input style={{height: '30px', width:'100%'}} type=\"text\" value={this.state.message} onChange={this.onMessageChange} required/>\nexport default Board"]},"metadata":{},"sourceType":"module"}