{"version":3,"sources":["logo.svg","App.js","login.js","board.js","notfound.js","index.js"],"names":["module","exports","App","Login","props","copyState","obj","Object","assign","onNameChange","event","setState","username","target","value","onPasswordChange","password","onUrlChange","url","onSubmit","preventDefault","console","log","state","sessionStorage","axios","post","params","headers","then","response","curr_token","all_tokens","tokens","history","push","pathname","token","error","status","alert","this","type","onChange","required","className","React","Component","date_format","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","Board","onMessageChange","out_message","onKeyDown","ele","keyCode","cur_message","message","Authorization","onTextChange","board_data","messages","users","columns","old_state","location","eventSource","EventSource","my","onerror","close","addEventListener","msg","JSON","parse","data","parted_user","filter","user","onlineUsers","i","length","includes","temp_messages","shift","style","display","flexDirection","height","overflow","align","color","flex","margin","minHeight","width","marginBottom","MessageList","map","Notfound","routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d133e183.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\n\nimport './App.css';\n\n// I think everything is supposed to run in this file, but the tutorial I followed did everything in index.js. tbd\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n\n    // data that user types in from login form\n    this.state = {\n      username: '',\n      password: '',\n      url: '',\n      tokens: {\n        \n      }\n    };\n\n  }\n\n  // returns a deep copy of object\n  copyState = (obj) => {\n    return Object.assign({}, obj);\n  }\n\n  // update username in state when keys are typed into login form\n  onNameChange = (event) =>{\n    this.setState({username: event.target.value})\n  }\n\n   // update password in state when keys are typed into login form\n  onPasswordChange = (event) =>{\n    this.setState({password: event.target.value})\n  }\n\n  // update url in state when keys are typed into login form\n  onUrlChange = (event) =>{\n    this.setState({url: event.target.value})\n  }\n\n  // call post to server when user submits login form\n  onSubmit = (event) => {\n    event.preventDefault(); // prevents page from reloading with username + password visible as url query\n\n    // log that username is visible from our state\n    console.log(\"Login form submitted\\n\");\n    console.log(\"username: \" + this.state.username);\n    console.log(\"password: \" + this.state.password);\n\n\n    sessionStorage.url = this.state.url;\n\n   // call post with user data\n   axios.post( this.state.url+\"/login\", null, { \n      params: {\n        username: this.state.username,\n        password: this.state.password \n      }, \n      headers: { \"Access-Control-Allow-Origin\": \"*\", } \n    }).then((response) => {\n      console.log(response);\n\n      // get JWT Token\n      var curr_token = response[\"data\"][\"token\"]\n\n      // store token in state as {user: token}\n      var all_tokens = this.copyState(this.state.tokens);\n      all_tokens[this.state.username] = curr_token\n      this.setState({tokens: all_tokens})\n      console.log(this.state.tokens);\n      //props.history.push(\"/login\");\n      //TODO: Redirect to messageboard\n      this.props.history.push({pathname: '/board', state: {token: curr_token}})\n\n    }, (error) => {\n      console.log(error);\n      if (error.response.status === 403){\n        console.log(\"403\");\n        alert(\"Wrong password\");\n      }\n\n    });\n   \n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n          <h1>Login</h1>\n\n          <label> <b>Beackend-URL</b> </label>\n          <input type=\"text\" value={this.state.url} onChange={this.onUrlChange} required/>\n          <br></br>\n          <label> <b>Username</b> </label>\n          <input type=\"text\" value={this.state.username} onChange={this.onNameChange} required/>\n          <br></br>\n          <label> <b>Password</b> </label>\n          <input type=\"password\" value={this.state.password} onChange={this.onPasswordChange} required/>\n          <br></br>\n          <button type=\"submit\" className=\"btn\">Login</button>\n        </form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login","import React from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios'; // axios seemed like a cool package to do api calls, alternative is fetch\n\nfunction date_format(timestamp) {\n  var date = new Date(timestamp * 1000);\n  return (\n      date.toLocaleDateString(\"en-US\") +\n      \" \" +\n      date.toLocaleTimeString(\"en-US\")\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    \n    // data that user types in from login form\n    this.state = {\n      board_data: 'This is default data on board',\n      messages: [\"Messages\"],\n      users: [\"Online\"],\n      columns: \"this is a column\",\n      token: ''\n    };\n\n    \n  }\n  // update username in state when keys are typed into login form\n  onMessageChange = (event) =>{\n    console.log(\"a\");\n    this.setState({out_message: event.target.value})\n    if (event.target.value === 'Enter'){\n      console.log(\"You typed enter!\\n\");\n    }\n  }\n\n  onKeyDown = (ele) =>{\n    if (ele.keyCode === 13){\n      var cur_message = this.state.out_message;\n      console.log(\"enter pressed!\");\n      console.log(\"sending this message to server: \" + cur_message);\n      console.log(\"with this token: \" + this.state.token);\n\n      this.setState({out_message: ''});\n\n      axios.post( sessionStorage.url+\"/message\", null, { \n      params: {\n        message: cur_message\n      }, \n      headers: { \n        \"Access-Control-Allow-Origin\": \"*\", \n        Authorization: `Bearer ${this.state.token}`\n      } \n    }).then((response) => {\n      console.log(response);\n\n    }, (error) => {\n      console.log(error);\n      if (error.response.status === 403){\n        console.log(\"403: Token not valid\");\n      }\n\n    });\n\n    }\n  }\n\n  onTextChange = (event) =>{\n    // DUMMY\n    this.setState({out_message: event.target.value})\n  }\n\n  \n\n  componentWillMount() {\n    var old_state = this.props.location.state;\n    if (old_state === void(0)){\n      console.log(\"old_state is undefined\");\n      this.props.history.push({pathname: '/', state: {}})\n      return\n    }\n    else{\n      console.log(\"old state: \");\n      console.log(old_state);\n      console.log(\"old token: \" + old_state.token);\n    }\n    \n\n    this.setState({token: old_state.token});\n    var eventSource = new EventSource(sessionStorage.url+\"/stream/\"+old_state.token);\n\n\n    let my = this;\n\n    eventSource.onerror   = function(event) {\n      console.log(\"Connection error\", event);\n      eventSource.close();\n    }\n\n    eventSource.addEventListener(\n      \"Part\",\n        (event) => {\n            console.log(\"Part\");\n            var msg = JSON.parse(event.data);\n            console.log(msg);\n            var parted_user = msg[\"user\"]\n            console.log(parted_user);\n            \n            my.setState({users: my.state.users.filter(function(user) { \n              return user !== parted_user\n            })});\n\n            var post = date_format(msg[\"created\"]) + \" : \" + msg[\"user\"] + \" got bored and left the chat.\" \n            my.setState({\n              messages: [...my.state.messages, post]\n            })\n           \n\n            console.log(\"my users:\");\n            console.log(my.state.users);\n        },\n        false\n    );\n\n    eventSource.addEventListener(\n      \"Users\",\n        (event) => {\n            console.log(\"Users\");\n            var msg = JSON.parse(event.data);\n            var onlineUsers = msg[\"users\"]\n            console.log(onlineUsers);\n            \n            my.setState({\n              users: [\"Online\"]\n            });\n            var i = 0;\n            for (; i < onlineUsers.length; i++){\n              my.setState({\n                users: [...my.state.users, onlineUsers[i]]\n              });\n            }\n        },\n        false\n    );\n\n    eventSource.addEventListener(\n      \"Join\",\n        (event) => {\n            console.log(\"Join\");\n            console.log(event.data);\n            var msg = JSON.parse(event.data);\n            //var board_data = document.getElementById('board').value;\n            var post = date_format(msg[\"created\"]) + \" : Make some noise for \" + msg[\"user\"] + \".\" \n            my.setState({\n              messages: [...my.state.messages, post]\n            })\n\n            if (my.state.users.includes(msg[\"user\"]) === false){\n              my.setState({\n                users: [...my.state.users, msg[\"user\"]]\n              })\n            }\n            \n        },\n        false\n    );\n\n    eventSource.addEventListener(\n      \"HeartBeat\",\n        (event) => {\n            console.log(event.data);\n        },\n        false\n    );\n\n    eventSource.addEventListener(\n      \"Disconnect\",\n        (event) => {\n          console.log(\"Stream disconnected\", event) \n          eventSource.close();\n          my.props.history.push({pathname: '/', state: {}})\n        },\n        false\n    );\n    \n    eventSource.addEventListener(\n      \"Message\",\n        (event) => {\n            console.log(\"Message\");\n            console.log(event.data);\n            var msg = JSON.parse(event.data);\n            //var board_data = document.getElementById('board').value;\n            var post = date_format(msg[\"created\"]) + \" : \" + msg[\"user\"] + \" SAYS -> \" +msg[\"message\"];\n\n\n            \n\n            var temp_messages = [...my.state.messages]\n            while (temp_messages.length > 40){\n              temp_messages.shift()\n            }\n\n            my.setState({\n              messages: [...temp_messages, post]\n            })\n\n        },\n        false\n    );   \n    \n    eventSource.addEventListener(\n      \"ServerStatus\",\n        (event) => {\n            console.log(\"Message\");\n            console.log(event.data);\n            var msg = JSON.parse(event.data);\n            //var board_data = document.getElementById('board').value;\n            var post = date_format(msg[\"created\"]) + \" STATUS: \" + msg[\"status\"] + \". Do you know even see my messages, huh?\";\n\n            var temp_messages = [...my.state.messages]\n            while (temp_messages.length > 40){\n              temp_messages.shift()\n            }\n\n            my.setState({\n              messages: [...temp_messages, post]\n            })\n        },\n        false\n    ); \n  }\n\n  //<ReactTable data={this.state.board_data} columns={this.state.columns} />\n\t\n\trender() {\n\t\treturn (\n\t\t\n        <section style={{display:'flex', flexDirection:'column', height:'90vh', overflow: 'hidden'}}>\n          <h1 align=\"center\" style={{color:'green'}}> CS 291 Class</h1>\n          <div style={{display: 'flex', flex: '1', margin: '0.5em 0.5em 0 0.5em', minHeight: '0'}} >\n            <MessageList style={{ height:'100%',  width:'10em', overflow:'scroll', margin: '0 0.5em 0.5em 0.5em', minHeight: '2em'}}\n                messages={this.state.messages} />\n          \n            <MessageList style={{  height:'100%',  width:'20%', overflow:'scroll', marginBottom: '0.5em'}}\n                messages={this.state.users} />\n\n          </div>\n\n          <input style={{margin:'80vh 0vh', height: '20vh', width:'100%'}} type=\"text\" value={this.state.out_message} onChange={this.onMessageChange} onKeyDown={this.onKeyDown} required/>\n        </section>\n    )\n  }\n}\n\nclass MessageList extends React.Component {\n  render() {\n      return (\n          <ul >\n              {this.props.messages.map((message) => {\n                  return (\n                    <ul>\n                      <div>{message}</div>\n                    </ul>\n                  )\n              })}\n          </ul>\n      )\n  }\n}\n\n//<input style={{height: '30px', width:'100%'}} type=\"text\" value={this.state.message} onChange={this.onMessageChange} required/>\nexport default Board","import React from 'react'\nconst Notfound = () => <h1>Not found</h1>\nexport default Notfound","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport App from './App'\nimport Login from './login'\nimport Board from './board'\nimport Notfound from './notfound'\n\nconst routing = (\n  <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/board\" component={Board} />\n        <Route component={Notfound} />\n      </Switch>\n    </div>\n  </Router>\n)\n\n\nReactDOM.render(routing, document.getElementById('root'))"],"sourceRoot":""}